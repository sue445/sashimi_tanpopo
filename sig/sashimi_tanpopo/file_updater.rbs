module SashimiTanpopo
  class FileUpdater
    def perform: (
        recipe_path: String,
        target_dir: String,
        params: Hash[Symbol, String],
        dry_run: bool,
        is_colored: bool,
        is_update_local: bool,
      ) -> changed_files

    def evaluate: (
        recipe_body: String,
        recipe_path: String,
        target_dir: String,
        params: Hash[Symbol, String],
        dry_run: bool,
        is_colored: bool,
        is_update_local: bool,
      ) -> changed_files

    class EvalContext
      attr_reader params: Hash[Symbol, String]

      attr_reader changed_files: changed_files

      def initialize: (
          params: Hash[Symbol, String],
          dry_run: bool,
          is_colored: bool,
          target_dir: String,
          is_update_local: bool,
        ) -> void

      def update_file: (String pattern) { (String) -> String } -> void

      private

      def update_single_file: (String path) { (String) -> String } -> String?

      def show_diff: (String str1, String str2) -> void
    end

    class InstanceEval
      def initialize: (
          recipe_body: String,
          recipe_path: String,
          target_dir: String,
          context: EvalContext
        ) -> void

      def call: () -> void
    end
  end
end
